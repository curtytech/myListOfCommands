//testar
expo build:android
//build expo apk
eas build -p android --profile preview

// build production
eas build -p android --profile production --message "First Production"


"plugins": [
      [
        "expo-notifications",
        {
          "icon": "./assets/notification-icon.png",
          "color": "#ffffff",
          "sounds": [
            "./assets/notification-pianosound.mp3"
          ]
        }
      ]
    ],

//TailWind React Native
yarn add react-native-wind

import React from "react";
import { View } from "react-native";
import { s } from "react-native-wind";

export default function App() {
  return (
  <View style={s`p-5 w-full h-full`}> </View>
  )
};

// Notifications Expoo
https://www.lahoregraphix.com/how-to-send-push-notification-in-react-native-expo-2023/
npx expo install expo-notifications expo-device

// vector icons
npm i react-native-vector-icons

// Time picker
npm install react-native-simple-time-picker


asyncstorage
npx expo install @react-native-async-storage/async-storage


// Navigation
npm install @react-navigation/native

npx expo install react-native-screens react-native-safe-area-context

// Stack Navigation
npm install @react-navigation/native-stack

// i react native svg
npx expo install react-native-svg

//i svg transformer
yarn add --dev react-native-svg-transformer

//add essas linhas no metro.config.js
const { getDefaultConfig } = require("expo/metro-config");

module.exports = (() => {
  const config = getDefaultConfig(__dirname);

  const { transformer, resolver } = config;

  config.transformer = {
    ...transformer,
    babelTransformerPath: require.resolve("react-native-svg-transformer"),
  };
  config.resolver = {
    ...resolver,
    assetExts: resolver.assetExts.filter((ext) => ext !== "svg"),
    sourceExts: [...resolver.sourceExts, "svg"],
  };

  return config;
})();

// criar um arquivo svg.d.ts
declare module "*.svg"{
    import React from 'react';
    import { SvgProps } from 'react-native-svg';
    const content: React.FC<SvgProps>;
    export default content;
}

// i hook form 
npm install react-hook-form

npm install @hookform/resolvers yup
